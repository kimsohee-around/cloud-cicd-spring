name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ---------------------------
      # 1️⃣ Build & Push Docker images
      # ---------------------------
      - name: Build & Push Backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/spring_9jwt-app ./spring_9jwt
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/spring_9jwt-app

      - name: Build & Push Frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/router-jwt-app ./routerAndjwt
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/router-jwt-app

      # ---------------------------
      # 2️⃣ Deploy to EC2 via SSH
      # ---------------------------
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Ensure docker network exists
            docker network create cloud-cicid-net || true

            # Pull latest images
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/spring_9jwt-app
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/router-jwt-app

            # Stop and remove existing containers if running
            docker stop spring_9jwt-app || true
            docker rm spring_9jwt-app || true
            docker stop router-jwt-app || true
            docker rm router-jwt-app || true

            # Run Spring Boot container with DB env variables
            docker run -d --name spring_9jwt-app --network cloud-cicid-net -p 8080:8080 -e DB_USERNAME="${{ secrets.DB_USERNAME }}" -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}"" -e DB_URL="${{ secrets.DB_URL }}" "${{ secrets.DOCKER_HUB_USERNAME }}"/spring_9jwt-app

            # Run Frontend container
            docker run -d --name router-jwt-app --network cloud-cicid-net -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/router-jwt-app
